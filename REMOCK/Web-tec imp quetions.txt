HTML:*
1. What are the new features in HTML5?
2. What is the difference between div and span?
3. What are semantic elements?
4. What is the purpose of the DOCTYPE declaration in HTML?
5. Explain the difference between HTML and XHTML.
6. What is the purpose of meta tags in HTML?
7. What is a form tag, and how does it work?
8. What is the difference between id and class attributes in HTML?
9. What are the different types of input types in HTML5?
10. How do you make an image accessible in HTML?

1.What is an Anchor tag and a Link tag and how both are differ? 
2. How do you embed multimedia (audio, video) in HTML5?
3. What are data attributes, and how can you use them?
4. What is the difference between href and src?
5. How does the defer and async attribute work in script tags?
6. How can you optimize HTML for SEO?
7. Explain the use of the <canvas> element in HTML5.
8. What is the difference between an ordered and unordered list?
9. What are web workers in HTML5, and how do they work?
10. What is progressive rendering in HTML?

CSS:
1. What is the box model in CSS?
2. What are CSS selectors, and can you list some types?
3. Explain the concept of specificity(priority) in CSS.
4. What is the difference between position: relative and position: absolute?
5. What is the difference between rem and em units in CSS?
6. What are flexbox and grid in CSS, and how are they different?
7. What is the z-index in CSS?
8. What is the difference between visibility: hidden and display: none?
9. How can you create a responsive design in CSS?
10. What is the difference between inline, block, and inline-block elements in CSS?
CSS:
1. What are pseudo-classes and pseudo-elements in CSS?
2. What is a CSS preprocessor? Can you name a few?
3. What is the difference between float and display: flex?
4. What is a media query?

Bootstrap:
1. What is Bootstrap, and why do we use it?
2. Explain the Bootstrap grid system.
3. What are Bootstrap breakpoints?
4. How do you make a button or a group of buttons in Bootstrap?
5. What is the difference between container, container-fluid, and container-{breakpoint} in Bootstrap?
6. How can you create a responsive navigation bar in Bootstrap?
7. What is the purpose of card in Bootstrap?
8. How do you customize Bootstrap components?
9. How does Bootstrap handle form validation?
10. What are utility classes in Bootstrap?





mock1 interview questions ?
HTML & CSS:
What is HTML5?
What are the new features of HTML5?
What is a tag in HTML?
What is the difference between paired and unpaired tags in HTML?
What are semantic elements?
What are meta tags, and why are they important in HTML?
How does the DOCTYPE declaration work in HTML?
Explain the CSS Box Model.
What are inline, block, and inline-block elements?
Explain the difference between visibility: hidden and display: none in CSS.
What is the z-index in CSS, and how does it work?
How do media queries make a webpage responsive?
What is the flexbox layout model in CSS?
How does CSS specificity and priority work?
What are pseudo-classes and pseudo-elements in CSS?
Explain the difference between position: relative and position: absolute.
How does Bootstrap’s grid system work?
What is the purpose of Bootstrap breakpoints?
Explain how semantic tags improve SEO.
What is a responsive web design, and how can you achieve it using CSS and Bootstrap?



code . is shortcut to redirect from cmd  to vs code . and git revert, git reset. to undo the commit.

Git: A tool that runs locally to track code changes and manage your project's version history.
GitHub: A platform for hosting Git remote repositories, collaborating with other developers, and using additional tools for managing, reviewing, and securing your code.

Git Revert:
Purpose: It is used to create a new commit that undoes changes made by a previous commit.
How it works: Instead of modifying the commit history, git revert creates a new commit that undoes the specific changes from a previous commit. This means that the history remains intact, making it a safer option for public repositories.

Git Reset:
Purpose: It is used to undo changes by moving the HEAD (the current branch) to a previous commit.
How it works: It modifies the commit history by changing the state of the working directory and staging area to match a previous commit. There are three modes:

GitHub commands:
git --version: to know the version of git
git config --list : to know our credentials
git clone link : clone a repository on our local machine.
git status: status of the code.
git add . : which will add all the files while making changes into working directory in staging area.
git commit -m "msg":committed of changes.
git push origin master: will push my code from local disk/machine to remote repository.
git pull origin master: to pull the code from remote  repo if any changes made by main branch or our team member.
git in it : used to create new git repo in my local machine.
git remote add origin master <link>project link.
git branch : to  check branch
git checkout -b <bname> : to create new branch.
git branch -m newbname : to rename branch name.
git diff  : to compare branches/files/commits.
git merge bname : will merge with main branch.
git reset filename : undo changes in staging area not in remote area.
git reset HEAD~1 : will go back to head back commit from current commit state.
git revert : will undo commit changes in remote area/repo.


